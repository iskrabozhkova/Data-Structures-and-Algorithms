Първото контролно приключи, и сега ръководството иска от Мими статистика за това, как са се справили студентите. 

Тя очакваше да и поискат такaва информация, но явно ръководството са решили да правят задълбочено проучване и искат повече данни от обикновено. 
Определени са Q на брой интервали от точки, и се пита колко студенти имат повече от  точки и по-малко от  точки. Човек би си помислил, че след като
Мими въведе точките на всеки студент в системата, такава статистика би се изготвила много лесно автоматично, но уви технологиите във ФМИ не са толкова 
напреднали и системата не може да направи това. За това тази задача се пада на Мими, колкото и да е недоволна тя. На нея не и се занимава и прехвърля работата на вас.

Дадени са ви точките  на всички n студенти и q на брой заявки. За всяка заявка трябва да кажете колко студенти имат точки в този интервал. Обърнете внимание, 
че може да няма студенти с точки в зададения интервал.


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    int n, q, a, b, num;
    std::vector<int> array;
    std::cin >> n >> q;
    std::vector<std::pair<int, int>> vector;
    std::pair<int, int> interval;

    for (int i = 0; i < n; i++) {
        std::cin >> num;
        array.push_back(num);
    }

    for (int i = 0; i < q; i++) {
        std::cin >> a >> b;
        interval.first = a;
        interval.second = b;
        vector.push_back(interval);
    }

    std::sort(array.begin(), array.end());

    for (int i = 0; i < q; i++) {
        if (vector[i].first > vector[i].second) {
            std::cout << 0 << std::endl;
            continue;
        }
        int result = std::upper_bound(array.begin(), array.end(), vector[i].second) - std::lower_bound(array.begin(), array.end(), vector[i].first);
            std::cout << result << std::endl;
    }
    return 0;
}
