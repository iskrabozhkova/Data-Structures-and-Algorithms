Митака, току що слязал от 94, закъснява за лекция по СДА. По традиция, преди да отиде на лекцията иска да мине да си вземе дюнер, 
но има опашка и за това решава да се пререди. Все пак иска да спазва правилата за дистанциране и да се пререди, така че да е възможно
най-далеч от останалите хора (човекът на опашката пред него и след него, ако има такива). Всички хора заемат 1 метър и разстоянието между 
всеки двама души може да се измери в цели метри. За улеснение ще си мислим, че хората са x а празните места -. Ако на опашката има един човек 
и след него 2 празни места, то опашката изглежда така: x--. Намерете място на Митко да се пререди, така че да има възможно най-голямо разстояние 
между него и хората преди и зад него. Ако не може да се прериди изведете -1. Изведете колко метра има между Митко и най-близкият човек до него.
В опашката винаги ще има поне 1 човек. Опашката не може да се разширява.


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    int n;
    std::cin >> n;

    char str[2000000];
    std::cin >> str;

    int count = 0;
    int max = 0;

    for (int i = 0; i < n; i++) {

        if (str[i] == '-') {
            while (str[i] == '-') {
                count++;
                if (max < count) {
                    max = count;
                }
                i++;
            }
        }
        count = 0;
    }

    if (max % 2 == 0) {
        std::cout << max / 2 - 1;
    }
    else if (max % 2 != 0) {
        std::cout << max / 2;
    }
    else {
        std::cout << -1;
    }
 
    return 0;
}
